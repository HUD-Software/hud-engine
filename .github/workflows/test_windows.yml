name: Windows tests

on: [push, pull_request, workflow_dispatch]

jobs:
  generate:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        generator: [Visual Studio 2022]
        config: [Debug,Release]
        arch: [Win32,Win64,ARM32,ARM64]
        toolset: [V142, Clang]
    steps:
      # - name: Checkout repository
      #   uses: actions/checkout@v3
      # - name: Generate Visual Studio solution
      #   shell: pwsh
      #   run: |
      #     & cmd.exe /c Build\\CMake\\Windows\\generate.bat "${{ matrix.generator }}" ${{ matrix.arch }} ${{ matrix.toolset }}
      #     if($LASTEXITCODE) { Exit $LASTEXITCODE }
      # - name: Add msbuild to PATH
      #   uses: microsoft/setup-msbuild@v1.1
      # - name: Build Visual Studio solution
      #   shell: pwsh
      #   run: |
      #     & cmd.exe /c Build\\CMake\\Windows\\build.bat "${{ matrix.generator }}" ${{ matrix.arch }} ${{ matrix.toolset }} ${{ matrix.config }}
      #     if($LASTEXITCODE) { Exit $LASTEXITCODE }
      # - name: Test Visual Studio solution
      #   shell: pwsh
      #   run: |
      #     & cmd.exe /c Build\\CMake\\Windows\\test.bat "${{ matrix.generator }}" ${{ matrix.arch }} ${{ matrix.toolset }} ${{ matrix.config }}
      #     if($LASTEXITCODE) { Exit $LASTEXITCODE }
      - name: Upload badge
        shell: pwsh
        run: |
          $url = "https://img.shields.io/badge/<SUBJECT>-<STATUS>-<COLOR>.svg"
          Invoke-WebRequest $url -OutFile ( New-Item -Path "Status/OSLayer/badge.svg" -Force )
      - name: Cache status
      - uses: actions/upload-artifact@v2
        with:
          name: os-layer-status
          path: Status/OSLayer/*.svg


  # push-status:
  #   runs-on: ubuntu-latest
  #   steps:
  #     #- uses: actions/upload-artifact@v2

  #     # - uses: actions/download-artifact@v3
  #     #   with:
  #     #     name: os-layer-status

  #     - name: Display structure of downloaded files
  #       run: ls -R
  #       working-directory: Status/OSLayer/
  #     # - name: Push to status web-site
  #     #   uses: cpina/github-action-push-to-another-repository@main
  #     #   env:
  #     #     API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
  #     #   with:
  #     #     source-directory: 'Status/OSLayer'
  #     #     destination-github-username: 'hud-software'
  #     #     destination-repository-name: 'hud-engine-status/Status/OSLayer'
  #     #     user-email: ci-oslayer
  #     #     target-branch: main