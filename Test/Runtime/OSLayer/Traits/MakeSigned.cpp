#include <OSLayer/Traits/MakeSigned.h>

namespace {
    enum class A;
    enum class Bc : char;
    enum class Bcc : const char;
    enum class Bvc : volatile char;
    enum class Bcvc : const volatile char;
    enum class C : signed char;
    enum class D : short;
    enum class E : int;
    enum class F : long;
    enum class G : long long;
    enum class H : unsigned char;
    enum class I : unsigned short;
    enum class J : unsigned int;
    enum class K : unsigned long;
    enum class L : unsigned long long;
    enum class M : wchar_t;
    enum class N : char16_t;
    enum class O : char32_t;
    enum class P : char8_t;

    enum class Q : i8;
    enum class R : i16;
    enum class S : i32;
    enum class T : i64;
    enum class U : u8;
    enum class V : u16;
    enum class W : u32;
    enum class X : u64;
    enum class Y : ansichar;
    enum class Z : wchar;
    enum class A1 : char16;
    enum class B1 : char32;
    enum class C1 : iptr;
    enum class D1 : uptr;
    enum class E1 : usize;
}

TEST(Traits, MakeSigned) {
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<char>, signed char>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<signed char>, signed char>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<short>, signed short>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<int>, signed int>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<long>, signed long>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<long long>, signed long long>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<const char>, const signed char>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<const signed char>, const signed char>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<const short>, const signed short>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<const int>, const signed int>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<const long>, const signed long>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<const long long>, const signed long long>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<volatile char>, volatile signed char>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<volatile signed char>, volatile signed char>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<volatile short>, volatile signed short>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<volatile int>, volatile signed int>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<volatile long>, volatile signed long>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<volatile long long>, volatile signed long long>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<const volatile char>, const volatile signed char>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<const volatile signed char>, const volatile signed char>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<const volatile short>, const volatile signed short>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<const volatile int>, const volatile signed int>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<const volatile long>, const volatile signed long>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<const volatile long long>, const volatile signed long long>));

    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<unsigned char>, signed char>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<unsigned short>, signed short>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<unsigned int>, signed int>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<unsigned long>, signed long>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<unsigned long long>, signed long long >));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<const unsigned char>, const signed char>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<const unsigned short>, const signed short>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<const unsigned int>, const signed int>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<const unsigned long>, const signed long>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<const unsigned long long>, const signed long long >));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<volatile unsigned char>, volatile signed char>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<volatile unsigned short>, volatile signed short>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<volatile unsigned int>, volatile signed int>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<volatile unsigned long>, volatile signed long>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<volatile unsigned long long>, volatile signed long long >));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<const volatile unsigned char>, const volatile signed char>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<const volatile unsigned short>, const volatile signed short>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<const volatile unsigned int>, const volatile signed int>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<const volatile unsigned long>, const volatile signed long>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<const volatile unsigned long long>, const volatile signed long long >));

    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<i8>, signed char>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<i16>, i16>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<i32>, i32>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<i64>, i64>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<u8>, signed char>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<u16>, i16>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<u32>, i32>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<u64>, i64>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<ansichar>, signed char>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<wchar>, hud::ConditionalT< sizeof(wchar) == 2, i16, i32> >));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<char16>, i16>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<char32>, i32>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<iptr>, iptr>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<uptr>, iptr>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<usize>, hud::ConditionalT< sizeof(void*) == 4, i32, i64>>));

    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<A>, signed int>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<Bc>, signed char>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<Bcc>, signed char>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<Bvc>, signed char>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<Bcvc>, signed char>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<C>, signed char>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<D>, signed short>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<E>, signed int>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<F>, signed long>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<G>, signed long long>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<H>, signed char>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<I>, signed short>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<J>, signed int >));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<K>, signed long >));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<L>, signed long long>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<M>, hud::ConditionalT< sizeof(wchar_t) == 2, signed short, signed int> >));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<N>, signed short>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<O>, signed int>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<P>, signed char>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<Q>, signed char>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<R>, i16>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<S>, i32>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<T>, i64>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<U>, signed char>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<V>, i16>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<W>, i32>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<X>, i64>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<Y>, signed char>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<Z>, hud::ConditionalT< sizeof(wchar) == 2, i16, i32>>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<A1>, i16>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<B1>, i32>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<C1>, iptr>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<D1>, hud::ConditionalT< sizeof(void*) == 4, i32, i64>>));
    ASSERT_TRUE((hud::IsSameV<hud::MakeSignedT<E1>, hud::ConditionalT< sizeof(void*) == 4, i32, i64>>));
}
